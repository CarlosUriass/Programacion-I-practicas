<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQ4AAACZCAYAAADepdTqAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH5gwIEi4QBZ/5hwAAGO9JREFU
        eF7tnQe0bFlRht8QFQyoKCoqM0xgmCGMYs5xqdecE4qCAQzoqJhA0uCYsxgRgRkYWObsmHNWzBFzzjnH
        +s7ddV71vtWnq7tP97tn1v+v9a37XvfZ++yT9qldVXv3BUmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJElap6tPnrvCNcZVhiRJUio6CDqK1mncHdRxSJK0VledPC9aGtcazzfeiv+r45AkKVXrMODexncY
        X2+8NJ+p45Ak6Yw6a+N9jeca9/fPJEmSVnSnu9wjdhqvZHyU8XLhs7alJEmLVHyYDwDO0A8wrg6fHYVt
        ldVRYUnK2l9FWq/sfFXAKl+kuuHEvYz7Gq88E9T1iQbWxn3aZ4eE/eFLucxoR1gT2zfuZLyE8ZIbYJut
        93OpRXsbdzWy4+q5pzGUkXJ1z9CLGdl5jLyUwXbL7ThofIPhxLcZv2P89kxQ178bf278Vvvs0HyIMRxT
        VThpvYyBdfQTG/gp40Yrt6iOg7Y26DQ+zeA4suNzftJ4lIfSpVycm8YrGPjxNp3XHzDewFh8x3Fn47ON
        /1s4P2xg2QzHVZVvbzzE+F0jqzvyIuN6Y6v9XEp1neO7Gv9sZMcW+RVDzuwJ+bm58tTqeIqRncceUhIG
        S27pHQfm0wcZH2vcWORjjG83shOTwY36RQblsvrm4KHGcEzVC+LbGww9CBVnbY/8m/H+xvAwLiWkTHsb
        r2r8nJEdW+RfjPc0lOU7Ic5P402MvzKycxlZ3EsnlR/AjjzQyB5gxzuJjzfe28BEzuqZnYq6Mo81/svI
        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
        wCpqWFbMTM7qmAtyXbKFonnhVBdzvikOwRen0HEQIuOtxESu8wY5/jwAhFcxrwl99tvQdiIYe10ML2sQ
        BmV9iuyib4KOblyzM8o/a9BW9kO2Jmt3ME6f28lHxIMbOoZPWVKvMkQhRXr8oehM4f4BQr3MF2FoyTCt
        smpYFfJx0t/09c8aDMdwQDOTmwWIiHjNPYx6WnzoA/xwVCWKgmW09c9anCt1F/68wjAK/8X4K2ub2FWc
        j2AZsMYE8XVWp2ZyVgVCa8x6XTtJqbM8HMJx+BGwDli4lzcnk51442f72QRhQnIuhrVHnHbDk03LUCwr
        53Acj678MFFyD+EjwgJ5c4PVr7CsWA2fh3+X4+E8TM7f8O+c1kniP6DjYzGcmwysSIZU+5xTOkWGmsN+
        wr7J+MQRznnLyjpMI+C8DOW4F6QDyE+w4+b2IUX9XeSBjou3aQl7kNKlAnut6UAGmqedetJ9FKHdQ13h
        4abjyLY9Q+tkhnIVJR3ISDvWrc5jYHDqUj9MaaoNjzi5mb+7tsEZr60/9O3/dJZDMtgG7hrvLemA8pN8
        zJM99VBXuHKH1ajZpz8cWZ37cFr/bnXvKva1Zl2KndlWfh0PdU7Rsc+rJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
        JEmSJEmSJEmSJEmSdKl14cL/A26ANn/EtMt7AAAAAElFTkSuQmCC
</value>
  </data>
</root>